{"version":3,"sources":["components/ContactList/contactList.module.css","components/Sections/Sections.js","redux/contactAction.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App.js","redux/contactReducer.js","redux/store.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","Sections","title","children","defaultProps","addContact","createAction","contact","payload","id","uuid","name","number","removeContact","filterContact","mapDispatchToProps","onRemoveContact","contactAction","connect","state","contacts","items","normalizedFilter","filter","toLowerCase","includes","map","key","type","className","style","BthDelete","onClick","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","Toast","TYPE_ERROR","TIME_NORMAL","props","onAddContact","this","contactForm","onSubmit","p_label","onChange","submit_form","Component","dispatch","content","onChangeFilter","App","createReducer","action","combineReducers","store","configureStore","reducer","contactReducer","ReactDOM","render","document","querySelector"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,iC,kICE9B,SAASC,EAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,SACtB,OACI,iCACKD,GAAS,4BAAKA,GACdC,GAKbF,EAASG,aAAe,CACpBF,MAAO,IAGID,Q,+CCCA,GAACI,WAbGC,YAAa,eAAe,SAAAC,GAAO,MAAK,CAACC,QAAS,CACjED,QAAQ,CACJE,GAAIC,iBACJC,KAAMJ,EAAQI,KACdC,OAAQL,EAAQK,aASIC,cALNP,YAAa,kBAKQQ,cAHrBR,YAAa,mBCY7BS,EAAsB,CAC1BC,gBAAiBC,EAAcJ,eAGlBK,eAbS,SAACC,GAAW,IAAD,EACTA,EAAMC,SAAvBC,EAD0B,EAC1BA,MACDC,EAF2B,EACnBC,OACkBC,cAEhC,MAAO,CACLJ,SAFsBC,EAAME,QAAO,SAAAhB,GAAO,OAAIA,EAAQI,KAAKa,cAAcC,SAASH,SAU9CP,EAAzBG,EAzBK,SAAC,GAAD,IAAEE,EAAF,EAAEA,SAAUJ,EAAZ,EAAYA,gBAAZ,OAClB,4BACGI,EAASM,KAAI,gBAAEjB,EAAF,EAAEA,GAAIE,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OAAZ,OAEZ,wBAAIe,IAAKhB,GACP,8BAAOA,EAAP,MAAgBC,GAChB,4BAAQgB,KAAK,SAASC,UAAWC,IAAMC,UAAWC,QAAS,kBAAMhB,EAAgBP,KAAjF,kB,sECAFwB,G,kNACFd,MAAQ,CACJR,KAAK,GACLC,OAAO,I,EAEXsB,aAAe,SAAAC,GAAM,IAAD,EAEMA,EAAEC,OAAjBzB,EAFS,EAETA,KAAM0B,EAFG,EAEHA,MACb,EAAKC,SAAL,eACK3B,EAAM0B,K,EAIfE,aAAe,SAAAJ,GACXA,EAAEK,iBAGqB,KAApB,EAAKrB,MAAMR,MAAqC,KAAtB,EAAKQ,MAAMP,OAEpC,IAAI6B,IAAM,kLAAuCA,IAAMC,WAAYD,IAAME,aAGzE,EAAKC,MAAMC,aAAX,eAA6B,EAAK1B,QAEtC,EAAKmB,SAAS,CAAC3B,KAAK,GAAGC,OAAO,M,uDAGxB,IAAD,EACkBkC,KAAK3B,MAArBR,EADF,EACEA,KAAMC,EADR,EACQA,OACb,OACI,0BAAMiB,UAAWC,IAAMiB,YAAaC,SAAUF,KAAKP,cAC/C,+BACA,uBAAGV,UAAWC,IAAMmB,SAApB,QACI,2BACIpB,UAAU,aACVD,KAAK,OACLS,MAAO1B,EACPuC,SAAUJ,KAAKZ,aACfvB,KAAK,UAGb,uBAAGkB,UAAWC,IAAMmB,SAApB,UACI,2BACIpB,UAAU,eACVD,KAAK,MACLS,MAAOzB,EACPsC,SAAUJ,KAAKZ,aACfvB,KAAK,WAEb,6BACA,4BAAQiB,KAAK,SAASC,UAAWC,IAAMqB,aAAvC,oB,GAlDUC,cA6DXlC,cAAQ,MAJI,SAAAmC,GAAQ,MAAK,CACpCR,aAAc,SAAAS,GAAO,OAAID,EAASpC,EAAcZ,WAAWiD,QAGhDpC,CAAkCe,GCrD3ClB,EAAqB,CACvBwC,eAAgBtC,EAAcH,eAGnBI,eARS,SAAAC,GAAK,MAAK,CAC9BkB,MAAOlB,EAAMC,SAASG,UAOcR,EAAzBG,EAnBA,SAAC,GAAD,IAAEmB,EAAF,EAAEA,MAAOkB,EAAT,EAASA,eAAT,OACP,6BACI,2BACI3B,KAAK,OACLC,UAAU,mBACVQ,MAAOA,EACPa,SAAU,SAAAf,GAAC,OAAIoB,EAAepB,EAAEC,OAAOC,cCDxC,SAASmB,IAEpB,OAEE,kBAAC,EAAD,CAAStD,MAAM,aACb,kBAAC,EAAD,MAEA,wCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,O,qBCJFmB,EAAQoC,YAVO,CACb,CAAEhD,GAAI,OAAQE,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEH,GAAI,OAAQE,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEH,GAAI,OAAQE,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEH,GAAI,OAAQE,KAAM,iBAAkBC,OAAQ,eAM3B,mBACtBK,EAAcZ,YAJI,SAACc,EAAOuC,GAAR,4BAAuBvC,GAAvB,CAA8BuC,EAAOlD,QAAQD,aAGzC,cAEtBU,EAAcJ,eAJO,SAACM,EAAOuC,GAAR,OAAmBvC,EAAMI,QAAO,SAAAhB,GAAO,OAAIA,EAAQE,KAAOiD,EAAOlD,cAEhE,IAMrBe,EAASkC,YAAc,GAAD,eACvBxC,EAAcH,eAAgB,SAACK,EAAOuC,GAAR,OAAmBA,EAAOlD,YAI9CmD,cAAgB,CAC3BtC,QACAE,WCnBWqC,EALDC,YAAe,CACzBC,QAAS,CACL1C,SAAU2C,KCElBC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAACJ,EAAD,OAEFU,SAASC,cAAc,W,kBCV7BpE,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,QAAU,gC","file":"static/js/main.25fd3ea9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BthDelete\":\"contactList_BthDelete__2GC1o\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Sections({title, children}){\r\n    return (\r\n        <section>\r\n            {title && <h2>{title}</h2>}\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSections.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nexport default Sections;\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport actionType from './contactActionType';\r\nimport { uuid } from 'uuidv4';\r\n\r\nconst addContact = createAction('ADD_CONTACT', contact => ({payload: {\r\n    contact:{\r\n        id: uuid(),\r\n        name: contact.name,\r\n        number: contact.number,\r\n    }\r\n}}));\r\n\r\nconst removeContact = createAction('DELETE_CONTACT');\r\n\r\nconst filterContact = createAction('FILTER_CONTACT');\r\n\r\n\r\nexport default {addContact, removeContact, filterContact}\r\n\r\n//=============================contactAction до рефакторинга кода на Redux Tookit==================================================\r\n// import actionType from './contactActionType';\r\n\r\n// const addContact = (newContact) => ({\r\n//     type: actionType.ADD_CONTACT,\r\n//     payload: {\r\n//         contact:{\r\n//             name: newContact.name,\r\n//             number: newContact.number\r\n//         }\r\n        \r\n//     }\r\n// })\r\n\r\n\r\n// const removeContact = id => ({\r\n//     type: actionType.DELETE_CONTACT,\r\n//     payload: { \r\n//         id,\r\n//      }\r\n// });\r\n\r\n\r\n// const filterContact = filter => ({\r\n//     type: actionType.FILTER_CONTACT,\r\n//     payload: {\r\n//         filter,\r\n//     }\r\n// })\r\n\r\n// export default {addContact, removeContact, filterContact}","import React from 'react';\r\nimport style from'./contactList.module.css';\r\nimport {connect} from 'react-redux';\r\nimport contactAction from '../../redux/contactAction';\r\n\r\nconst ContactList = ({contacts, onRemoveContact}) =>(\r\n  <ul>\r\n    {contacts.map(({id, name, number}) => \r\n    \r\n      <li key={name}>\r\n        <span>{name} : {number}</span>\r\n        <button type=\"button\" className={style.BthDelete} onClick={() => onRemoveContact(id)}>Delete</button>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {items, filter} = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  return {\r\n    contacts: visibleContacts\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = ({\r\n  onRemoveContact: contactAction.removeContact\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, {Component} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport contactAction from '../../redux/contactAction';\r\n\r\nimport style from'./contactForm.module.css';\r\nimport { Toast } from \"toaster-js\"\r\nimport \"toaster-js/default.css\";\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name:'',\r\n        number:'',\r\n    };\r\n    handleChange = e => {\r\n\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]:value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        \r\n        if(this.state.name === '' || this.state.number === ''){\r\n\r\n            new Toast(\"Не введено имя, или номер телефона!\", Toast.TYPE_ERROR, Toast.TIME_NORMAL);    \r\n        }\r\n        else{\r\n            this.props.onAddContact({ ...this.state });\r\n        }\r\n        this.setState({name:'',number:''});\r\n    }\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n            <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n                <label>\r\n                <p className={style.p_label}>Name</p>\r\n                    <input \r\n                        className=\"Name-input\"\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        name=\"name\"\r\n                    />\r\n                </label>\r\n                <p className={style.p_label}>Namber</p>\r\n                    <input \r\n                        className=\"Number-input\"\r\n                        type=\"tel\" \r\n                        value={number} \r\n                        onChange={this.handleChange}\r\n                        name=\"number\"\r\n                    />\r\n                <br/>\r\n                <button type=\"submit\" className={style.submit_form}>Add contact</button>\r\n                \r\n            </form>\r\n      )\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddContact: content => dispatch(contactAction.addContact(content)),\r\n  });\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport contactAction from '../../redux/contactAction';\r\n\r\nconst Filter = ({value, onChangeFilter}) => (\r\n        <div>\r\n            <input \r\n                type=\"text\" \r\n                className=\"TaskEditor-input\" \r\n                value={value} \r\n                onChange={e => onChangeFilter(e.target.value)}\r\n            />\r\n        </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n  });\r\n\r\nconst mapDispatchToProps = {\r\n    onChangeFilter: contactAction.filterContact,\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport Section from './Sections';\nimport ContactList from './ContactList';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter'\n\nimport { Toast } from \"toaster-js\"\nimport \"toaster-js/default.css\";\n\nexport default function App() {\n\n    return (\n\n      <Section title=\"Phonebook\">\n        <ContactForm/>\n\n        <h2>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </Section>\n\n    )\n}\n\n\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactAction from './contactAction';\r\n\r\nconst initialState = [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ];\r\n\r\n    const AddContact = (state, action) => [...state, action.payload.contact];\r\n    const RemoveContact = (state, action) => state.filter(contact => contact.id !== action.payload);\r\n    \r\nconst items = createReducer(initialState,{\r\n    [contactAction.addContact]: AddContact,\r\n    [contactAction.removeContact]: RemoveContact,\r\n})\r\n\r\n\r\nconst filter = createReducer('',{\r\n    [contactAction.filterContact]: (state, action) => action.payload,\r\n\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n\r\n//=============================contactAction до рефакторинга кода на Redux Tookit==================================================\r\n// import {combineReducers} from 'redux';\r\n// import actionTypes from './contactActionType';\r\n// import contactActionType from './contactActionType';\r\n\r\n// const initialState = [\r\n//         { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//         { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//         { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//         { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ];\r\n\r\n\r\n// const items = (state = initialState, {type, payload}) => {\r\n//     switch(type){\r\n//         case actionTypes.ADD_CONTACT:\r\n//         return[...state, payload.contact];\r\n\r\n//         case actionTypes.DELETE_CONTACT:\r\n//             return state.filter(contact => contact.id !== payload.id)\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n\r\n// const filter = (state = '', {type, payload}) => {\r\n//     switch(type){\r\n//         case actionTypes.FILTER_CONTACT:\r\n//             return payload.filter;\r\n//     default:\r\n//         return state;\r\n//     }\r\n// };\r\n\r\n// export default combineReducers({\r\n//     items,\r\n//     filter,\r\n// });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from './contactReducer'\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactReducer,\r\n    }\r\n  });\r\nexport default store;\r\n\r\n//==============================store до рефакторинга кода на Redux Tookit==================================================\r\n\r\n// import { createStore, combineReducers } from 'redux';\r\n// import contactReducer from './contactReducer'\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactReducer,\r\n// });\r\n\r\n\r\n// const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),)\r\n\r\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App.js';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.querySelector(\"#root\"));\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__1ig-n\",\"submit_form\":\"contactForm_submit_form__2qntL\",\"p_label\":\"contactForm_p_label__2VvPI\"};"],"sourceRoot":""}